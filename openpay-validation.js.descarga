jQuery.extend(jQuery.validator.messages, {
    required: "Campo requerido",
    minlength: jQuery.validator.format("Se requieren al menos {0} caracteres"),
    maxlength: jQuery.validator.format("Solo se permiten hasta {0} caracteres"),
    number: "El campo debe ser num\u00E9rico",
    alphanum: "El campo debe ser alfanum\u00E9rico",
    min: jQuery.validator.format("El valor mínimo es {0}"),
    max: jQuery.validator.format("El valor máximo es {0}"),
    email: "Dirección de correo electrónico inválida",
    range: jQuery.validator.format("El campo debe tener un valor entre {0} y {1}."),
    
    url: "Please enter a valid URL.",
    date: "Please enter a valid date.",
    dateISO: "Please enter a valid date (ISO).",
    digits: "Introduzca solo dígitos.",
    creditcard: "Please enter a valid credit card number.",
    equalTo: "Please enter the same value again.",
    accept: "Please enter a value with a valid extension.",
    rangelength: jQuery.validator.format("Please enter a value between {0} and {1} characters long."),
    remote: "Please fix this field."
});

$.validator.setDefaults({
	debug: false,
    errorPlacement : function(error, element) {
		error.insertAfter(element.parent());
		error.css('position', 'absolute');
        error.css('bottom', '-15px');
        error.css('font-size', '10px');
        error.css('white-space', 'nowrap');
	}
});

function resetForm(formSelector){
	$(formSelector)[0].reset();
	$(formSelector).data("validator").resetForm();
	$(formSelector + " .invalid").removeClass("invalid");
	$(formSelector + " .valid").removeClass("valid");
	$(formSelector + " .state-error").removeClass("state-error");
	$(formSelector + " .state-success").removeClass("state-success");
}

function resetFormWithSelectpickers(formSelector){
	resetForm(formSelector);
	$(formSelector + " .selectpicker").selectpicker('refresh');
}

function verifyDigit(clabe) {
    var weightFactor = [3,  7,  1,  3,  7,  1,  3,  7,  1,  3,  7,  1,  3,  7,  1,  3,  7];
    var clabeArray = [];
    var productsModTen = [];
    var sumProductsModTen = 0;
    var verifierDigitCalculated  = null;
    for (var i = 0; i < clabe.length - 1; i++) {
        clabeArray.push(parseInt(clabe.substring(i, i+1)));
        var productModTen = parseInt((clabeArray[i] * weightFactor [i]) % 10);
        productsModTen.push(productModTen);
        sumProductsModTen += productModTen;
    }
    sumProductsModTen = sumProductsModTen % 10;
    verifierDigitCalculated = (10 - sumProductsModTen) % 10;
    return verifierDigitCalculated == parseInt(clabe.substring(clabe.length - 1));
}

function formatDueDate(id) {
    //lowercase AM/PM
    if(document.getElementById(id).innerHTML.includes("PM")){
        document.getElementById(id).innerHTML = document.getElementById(id).innerHTML.replace("PM","pm");
    }else{
        document.getElementById(id).innerHTML = document.getElementById(id).innerHTML.replace("AM","am");
    }
    //capitalize month
    let splitDueDate = document.getElementById(id).innerHTML.split(" ");
    splitDueDate[2] = splitDueDate[2].charAt(0).toUpperCase() + splitDueDate[2].slice(1);
    document.getElementById(id).innerHTML = splitDueDate.join(" ");
}

